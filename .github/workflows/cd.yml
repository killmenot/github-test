name: Deploy

on:
  release:
    types: [prereleased, released]

concurrency:
    group: cd-${{ github.ref }}
    cancel-in-progress: false

env:
  TEST_1: test_1
  TEST_2: test_2

jobs:
  build-and-push:
    name: "Build and push docker image"
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.extract.outputs.environment }}
    steps:
      - id: extract
        name: Extract environment
        run: echo "environment=$([[ '${{ github.event.action }}' == 'prereleased' ]] && echo 'staging' || echo 'production')" >> $GITHUB_OUTPUT

      - name: Print environment
        run: 'echo "Extracted environment: $EXTRACTED"'
        env:
          EXTRACTED: ${{ steps.extract.outputs.environment }}

      - name: Print variables
        environment: staging
        run: echo "${{ toJSON(vars)}}"

      - name: Print env
        environment: staging
        run: echo "${{ toJSON(env)}}"

      - name: Print secrets
        environment: staging
        run: echo "${{ toJSON(secrets)}}"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker image
        run: |
          docker build -t ghcr.io/killmenot/github-test-${{ steps.extract.outputs.environment }}:${{ github.event.release.tag_name }} -f Dockerfile .

      - name: Push docker image to GitHub Container Registry
        run: |
          docker push ghcr.io/killmenot/github-test-${{ steps.extract.outputs.environment }}:${{ github.event.release.tag_name }}




